/*
 * This file is generated by jOOQ.
 */
package com.ionutgradinaru.learning.graphql.dao.generated;


import com.ionutgradinaru.learning.graphql.dao.generated.tables.Courses;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.FlywaySchemaHistory;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.StudentEnrollments;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.Students;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.Teachers;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.records.CoursesRecord;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.records.FlywaySchemaHistoryRecord;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.records.StudentEnrollmentsRecord;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.records.StudentsRecord;
import com.ionutgradinaru.learning.graphql.dao.generated.tables.records.TeachersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CoursesRecord> COURSES_PKEY = Internal.createUniqueKey(Courses.COURSES, DSL.name("courses_pkey"), new TableField[] { Courses.COURSES.COURSE_ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<StudentEnrollmentsRecord> STUDENT_ENROLLMENTS_PKEY = Internal.createUniqueKey(StudentEnrollments.STUDENT_ENROLLMENTS, DSL.name("student_enrollments_pkey"), new TableField[] { StudentEnrollments.STUDENT_ENROLLMENTS.ENROLLMENT_ID }, true);
    public static final UniqueKey<StudentsRecord> STUDENTS_EMAIL_KEY = Internal.createUniqueKey(Students.STUDENTS, DSL.name("students_email_key"), new TableField[] { Students.STUDENTS.EMAIL }, true);
    public static final UniqueKey<StudentsRecord> STUDENTS_PKEY = Internal.createUniqueKey(Students.STUDENTS, DSL.name("students_pkey"), new TableField[] { Students.STUDENTS.STUDENT_ID }, true);
    public static final UniqueKey<TeachersRecord> TEACHERS_EMAIL_KEY = Internal.createUniqueKey(Teachers.TEACHERS, DSL.name("teachers_email_key"), new TableField[] { Teachers.TEACHERS.EMAIL }, true);
    public static final UniqueKey<TeachersRecord> TEACHERS_PKEY = Internal.createUniqueKey(Teachers.TEACHERS, DSL.name("teachers_pkey"), new TableField[] { Teachers.TEACHERS.TEACHER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CoursesRecord, TeachersRecord> COURSES__COURSES_TEACHER_ID_FKEY = Internal.createForeignKey(Courses.COURSES, DSL.name("courses_teacher_id_fkey"), new TableField[] { Courses.COURSES.TEACHER_ID }, Keys.TEACHERS_PKEY, new TableField[] { Teachers.TEACHERS.TEACHER_ID }, true);
    public static final ForeignKey<StudentEnrollmentsRecord, CoursesRecord> STUDENT_ENROLLMENTS__STUDENT_ENROLLMENTS_COURSE_ID_FKEY = Internal.createForeignKey(StudentEnrollments.STUDENT_ENROLLMENTS, DSL.name("student_enrollments_course_id_fkey"), new TableField[] { StudentEnrollments.STUDENT_ENROLLMENTS.COURSE_ID }, Keys.COURSES_PKEY, new TableField[] { Courses.COURSES.COURSE_ID }, true);
    public static final ForeignKey<StudentEnrollmentsRecord, StudentsRecord> STUDENT_ENROLLMENTS__STUDENT_ENROLLMENTS_STUDENT_ID_FKEY = Internal.createForeignKey(StudentEnrollments.STUDENT_ENROLLMENTS, DSL.name("student_enrollments_student_id_fkey"), new TableField[] { StudentEnrollments.STUDENT_ENROLLMENTS.STUDENT_ID }, Keys.STUDENTS_PKEY, new TableField[] { Students.STUDENTS.STUDENT_ID }, true);
}
